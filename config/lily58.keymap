/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/* use helper macros to define left and right hand keys */
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/lily58.h"                                  // key-position labels
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

/* left-hand HRMs */
ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

/* right-hand HRMs */
ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

/ {
    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "Base";
            bindings = <
&none  &none           &none           &none             &none        &none                        &none  &none        &none             &none           &none           &none
&none  &kp Q           &kp W           &kp F             &kp P        &kp B                        &kp J  &kp L        &kp U             &kp Y           &kp SEMICOLON   &none
&none  &mt LEFT_GUI A  &mt LEFT_ALT R  &mt LEFT_SHIFT S  &mt LCTRL T  &kp G                        &kp M  &mt LCTRL N  &mt LEFT_SHIFT E  &mt LEFT_ALT I  &mt LEFT_GUI O  &none
&none  &kp Z           &kp X           &kp C             &kp D        &kp V  &none        &none    &kp K  &kp H        &kp COMMA         &kp DOT         &kp FSLH        &none
                                       &kp LALT          &kp LGUI     &mo 1  &kp SPACE    &kp RET  &mo 2  &kp BSPC     &kp DELETE
            >;
        };

        left {
            display-name = "Lower";
            bindings = <
&none  &none  &none         &none         &none         &none                              &none                 &none                  &none    &none  &none  &none
&none  &none  &kp MINUS     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9                       &kp GRAVE             &kp BACKSLASH          &none    &none  &none  &none
&none  &none  &kp NUMBER_0  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6                       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SQT  &none  &none  &none
&none  &none  &kp EQUAL     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &bt BT_NXT    &none  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none    &none  &none  &none
                            &none         &none         &none         &none         &none  &none                 &none                  &none
            >;
        };

        right {
            display-name = "Raise";
            bindings = <
&none  &none   &none   &none    &none    &none                         &none        &none      &none         &none      &none     &none
&none  &kp N1  &kp N2  &kp N3   &kp N4   &kp N5                        &kp N6       &kp N7     &kp N8        &kp N9     &kp N0    &none
&none  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                        &kp LEFT     &kp DOWN   &kp UP_ARROW  &kp RIGHT  &none     &none
&none  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &bt BT_CLR    &none  &kp KP_PLUS  &kp MINUS  &kp EQUAL     &kp LBKT   &kp RBKT  &none
                       &none    &none    &none    &none         &none  &none        &none      &none
            >;
        };
    };
};
